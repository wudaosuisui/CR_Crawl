<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/data/mongo     
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.10.xsd  " >
			
	<!-- 管理service和dao -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
				
	<!-- 数据库链接信息 -->		
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<property name="maxPoolSize" value="${c3p0.pool.size.max}"/>
		<property name="minPoolSize" value="${c3p0.pool.size.min}" />
		<property name="initialPoolSize" value="${c3p0.pool.size.ini}"/>
		<property name="acquireIncrement" value="${c3p0.pool.size.increment}"/>
		<property name="maxIdleTime" value="60"/>
		<property name="idleConnectionTestPeriod" value="60"/>
 
	</bean>
		
	<!-- sqlSessionFactory spring和myBatis整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis_config.xml"/>
		<property name="mapperLocations" value="classpath:com/asiainfo/manydo/crawl/dao/mapper/*.xml"/>
		<property name="plugins">
			<bean class="com.github.pagehelper.PageHelper">
				<property name="properties">
					<value>
						dialect=mysql
						reasonable=true
						pageSizeZero=true
					</value>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value= "com.asiainfo.manydo.crawl.dao.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
    
    <context:component-scan base-package="com.asiainfo.manydo.crawl">
    </context:component-scan>  
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- mongodb配置 -->
	<mongo:mongo-client id="mongo"
	  replica-set="${mongo.replicaSet}"
	  credentials="${mongo.username}:${mongo.password}@${mongo.authdbname}">
	  <mongo:client-options connections-per-host="${mongo.connectionsPerHost}"
	   threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
	   connect-timeout="${mongo.connectTimeout}"
	   socket-timeout="${mongo.socketTimeout}"
 	   write-concern="SAFE" />
	 </mongo:mongo-client>
	 
	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
	<mongo:db-factory id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo" />
	 
	<!-- 读写分离级别配置  -->
	<!-- 首选主节点，大多情况下读操作在主节点，如果主节点不可用，如故障转移，读操作在从节点。 -->
	<bean id="primaryPreferredReadPreference" class="com.mongodb.TaggableReadPreference.PrimaryPreferredReadPreference"></bean>
	<!-- 最邻近节点，读操作在最邻近的成员，可能是主节点或者从节点。  -->
	<bean id="nearestReadPreference" class="com.mongodb.TaggableReadPreference.NearestReadPreference"></bean>
	<!-- 从节点，读操作只在从节点， 如果从节点不可用，报错或者抛出异常。存在的问题是secondary节点的数据会比primary节点数据旧。  -->
	<bean id="secondaryReadPreference" class="com.mongodb.TaggableReadPreference.SecondaryReadPreference"></bean>
	<!-- 优先从secondary节点进行读取操作，secondary节点不可用时从主节点读取数据  -->
	<bean id="secondaryPreferredReadPreference" class="com.mongodb.TaggableReadPreference.SecondaryPreferredReadPreference"></bean>
	 
	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	    <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	    <property name="readPreference" ref="secondaryPreferredReadPreference" />
	</bean>
	 
	<!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
	<mongo:mapping-converter base-package="com.asiainfo.manydo.crawl.mongo.model" />
	 
	<!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
	<mongo:repositories base-package="com.asiainfo.manydo.crawl.mongo.dao" />
	
</beans>			
